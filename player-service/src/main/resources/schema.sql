DROP TABLE IF EXISTS "skins" CASCADE;

DROP TABLE IF EXISTS skins CASCADE;
DROP TABLE IF EXISTS user_skins CASCADE;
DROP TABLE IF EXISTS skin_purchase_history CASCADE;
DROP TABLE IF EXISTS transaction CASCADE;
DROP TABLE IF EXISTS statistics CASCADE;
DROP TABLE IF EXISTS users CASCADE;

CREATE SEQUENCE IF NOT EXISTS users_id_seq;

CREATE TABLE IF NOT EXISTS users (
  id INTEGER PRIMARY KEY DEFAULT nextval('users_id_seq'),
  nickname VARCHAR(100) UNIQUE NOT NULL,
  email VARCHAR(255) UNIQUE NOT NULL,
  password_hash VARCHAR(255) NOT NULL,
  role VARCHAR(20) NOT NULL DEFAULT 'USER',
  gems INTEGER NOT NULL DEFAULT 1000
);

CREATE TABLE IF NOT EXISTS skins (
  id SERIAL PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  image_url VARCHAR(255) NOT NULL,
  price INTEGER NOT NULL CHECK (price >= 0)
);

CREATE TABLE IF NOT EXISTS user_skins (
  user_id INTEGER NOT NULL,
  skin_id INTEGER NOT NULL,
  is_selected BOOLEAN DEFAULT FALSE,
  PRIMARY KEY (user_id, skin_id),
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
  FOREIGN KEY (skin_id) REFERENCES skins(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS skin_purchase_history (
  id SERIAL PRIMARY KEY,
  user_id INTEGER NOT NULL,
  skin_id INTEGER NOT NULL,
  amount INTEGER NOT NULL CHECK (amount >= 0),
  created_at TIMESTAMP DEFAULT NOW(),
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
  FOREIGN KEY (skin_id) REFERENCES skins(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS transaction (
  transaction_id SERIAL PRIMARY KEY,
  user_id INTEGER NOT NULL,
  amount INTEGER NOT NULL,
  price FLOAT NOT NULL,
  currency VARCHAR(10) NOT NULL DEFAULT 'EUR',
  payment_method VARCHAR(50) NOT NULL,
  created_at TIMESTAMP DEFAULT NOW(),
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS statistics (
  user_id INTEGER PRIMARY KEY,
  games_played INTEGER DEFAULT 0,
  best_score INTEGER DEFAULT 0,
  average_score FLOAT DEFAULT 0,
  kills_per_death FLOAT DEFAULT 0,
  total_time_played INTEGER DEFAULT 0,
  account_created_at TIMESTAMP DEFAULT NOW(),
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

SELECT setval('users_id_seq', COALESCE((SELECT MAX(id) FROM users), 1), false);
